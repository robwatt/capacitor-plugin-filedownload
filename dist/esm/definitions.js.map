{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["import type { PluginListenerHandle } from '@capacitor/core';\n\nexport interface FileDownloadPlugin {\n  download(options: FileDownloadOptions): Promise<FileDownloadResponse>;\n  /**\n   * cancel download\n   */\n  cancel(): Promise<void>;\n  /**\n   * get status of download\n   */\n  isCanceled(): Promise<CancelStatus>;\n  /**\n   * only for android\n   */\n  checkPermissions(): Promise<PermissionStatus>;\n  /**\n   * only for android\n   */\n  requestPermissions(): Promise<PermissionStatus>;\n  /**\n   * open app setting, only for android\n   */\n  openSetting(): Promise<void>;\n  addListener(\n    eventName: 'downloadProgress',\n    listenerFunc: (progress: FileDownloadProgress) => void,\n  ): Promise<PluginListenerHandle>;\n}\n\nexport interface PermissionStatus {\n  /**\n   * prompt: 首次申请，询问。\n   * prompt-with-rationale： 每次都询问。\n   * granted： 已获取权限。\n   * denied：权限已拒绝。\n   */\n  storage: PermissionState;\n}\n\nexport interface CancelStatus {\n  isCanceled: boolean\n}\n\n/**\n * download destination , on android default is \"DOWNLOAD\", on ios default is \"DOCUMENT\"\n */\nexport type Destination = \"DOCUMENT\" | \"EXTERNAL\" | \"EXTERNAL_STORAGE\" | \"DATA\" | \"CACHE\" | \"LIBRARY\";\n\nexport interface FileDownloadOptions {\n  url: string;\n  fileName: string;\n  /**\n   * Download file destination\n   * @default ios default: Document\n   * android default: External Storage\n   */\n  destination?: Destination;\n  /**\n   * request headers, when headers has value, url must be a http request with POST method\n   */\n  headers?: Record<string, string>,\n  /**\n   * request body, when body has value, url must be a http request width POST method\n   */\n  body?: Record<string, unknown>,\n  /**\n   * Downloader Title， Only Android\n   * @deprecated since 1.0.6\n   */\n  downloadTitle?: string;\n  /**\n   * Downloader Description， Only Android\n   * @deprecated since 1.0.6\n   */\n  downloadDescription?: string;\n}\nexport interface FileDownloadResponse {\n  path: string;\n}\nexport interface FileDownloadProgress {\n  progress: number;\n}\n"]}